{"version":3,"file":"menubar.esm.js","sources":["../src/_baseTypes.js","../src/validate.js","../src/_baseMenuToggle.js","../src/_baseMenuItem.js","../src/eventHandlers.js","../src/_baseMenu.js","../src/menubarItem.js","../src/menubarToggle.js","../src/menubar.js"],"sourcesContent":["export const baseMenuType = Symbol(\"BaseMenu\");\nexport const baseMenuToggleType = Symbol(\"BaseMenuToggle\");\n","import { baseMenuType, baseMenuToggleType } from \"./_baseTypes.js\";\n\n/**\n * Checks to see if the provided elements are instances of HTMLElement.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isHTMLElement(elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const type = typeof elements;\n\n      throw new TypeError(\n        `Elements given to isHTMLElement() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof HTMLElement)) {\n        const type = typeof elements[key];\n        throw new TypeError(\n          `${key} must be an instance of HTMLElement. ${type} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are valid CSS selectors.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isCSSSelector(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isCSSSelector() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      try {\n        document.querySelector(values[key]);\n      } catch (error) {\n        throw new TypeError(\n          `${key} must be a valid CSS selector. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are booleans.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isBoolean(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isBoolean() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"boolean\") {\n        throw new TypeError(`${key} must be a boolean. ${type} given.`);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are numbers.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isNumber(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isNumber() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"number\") {\n        throw new TypeError(`${key} must be a number. ${type} given.`);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isString(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isString() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        throw new TypeError(`${key} must be a string. ${type} given.`);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are instances of Event.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isEvent(elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const type = typeof elements;\n\n      throw new TypeError(\n        `Elements given to isEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof Event)) {\n        const type = typeof elements[key];\n        throw new TypeError(\n          `${key} must be an instance of Event. ${type} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are instances of KeyboardEvent.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isKeyboardEvent(elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const type = typeof elements;\n\n      throw new TypeError(\n        `Elements given to isKeyboardEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof KeyboardEvent)) {\n        const type = typeof elements[key];\n        throw new TypeError(\n          `${key} must be an instance of KeyboardEvent. ${type} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are a menus.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isMenu(elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const type = typeof elements;\n\n      throw new TypeError(\n        `Elements given to isMenu() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!elements[key][baseMenuType]) {\n        const type = typeof elements[key];\n\n        throw new TypeError(\n          `${key} must be an instance of BaseMenu. ${type} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are using a specific tag.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * @param   {string} tagName  - The name of the tag.\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isTag(tagName, elements) {\n  if (isString({ tagName }) && isHTMLElement(elements)) {\n    const tag = tagName.toLowerCase();\n    let check = true;\n\n    for (const key in elements) {\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\n    }\n\n    return check;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are a menu toggles.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isMenuToggle(elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const type = typeof elements;\n\n      throw new TypeError(\n        `Elements given to isMenuToggle() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!elements[key][baseMenuToggleType]) {\n        const type = typeof elements[key];\n\n        throw new TypeError(\n          `${key} must be an instance of BaseMenuToggle. ${type} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid focus states for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidState(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isValidState() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validStates = [\"none\", \"self\", \"child\"];\n\n    for (const key in values) {\n      if (!validStates.includes(values[key])) {\n        throw new TypeError(\n          `${key} must be one of the following values: ${validStates.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid event types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidEvent(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isValidEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"none\", \"mouse\", \"keyboard\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if an event is supported by a node.\n *\n * @param   {string}      event   - The event type.\n * @param   {HTMLElement} element - The element to check.\n *\n * @returns {boolean} - The result.\n */\nexport function isEventSupported(event, element) {\n  isString({ event });\n  isHTMLElement({ element });\n\n  const eventProp = `on${event}`;\n\n  return typeof element[eventProp] !== \"undefined\";\n}\n\n/**\n * Checks to see if the provided value is either a string or an array of strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidClassList(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isValidClassList() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        if (Array.isArray(values[key])) {\n          values[key].forEach(value => {\n            isString({ classValue: value });\n          });\n        } else {\n          throw new TypeError(\n            `${key} must be a string or an array of strings. ${type} given.`\n          );\n        }\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid hover types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidHoverType(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isValidHoverType() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"off\", \"on\", \"dynamic\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport { baseMenuToggleType } from \"./_baseTypes.js\";\nimport { isHTMLElement, isMenu, isTag, isBoolean } from \"./validate.js\";\n\n/*\n * A link or button that controls the visibility of a Menu.\n */\nclass BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}               param0                       - The menu toggle object.\n   * @param {HTMLElement}          param0.menuToggleElement     - The toggle element in the DOM.\n   * @param {HTMLElement}          param0.parentElement         - The element containing the controlled menu.\n   * @param {BaseMenu}             param0.controlledMenu        - The menu controlled by this toggle.\n   * @param {BaseMenu|null}        [param0.parentMenu = null]   - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n  }) {\n    // Run validations.\n    isHTMLElement({ menuToggleElement, parentElement });\n\n    if (parentMenu !== null) {\n      isMenu({ controlledMenu, parentMenu });\n    } else {\n      isMenu({ controlledMenu });\n    }\n\n    this.domElements = {\n      toggle: menuToggleElement,\n      parent: parentElement,\n    };\n    this.menuElements = {\n      controlledMenu,\n      parentMenu,\n    };\n    this.isOpen = false;\n\n    this.expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n    this.collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n\n    this.initialize();\n  }\n\n  /**\n   * Initialize the toggle by ensuring WAI-ARIA values are set,\n   * handling click events, and adding new keydown events.\n   */\n  initialize() {\n    const { closeClass } = this.elements.controlledMenu;\n\n    // Add WAI-ARIA properties.\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // If the toggle element is a button, there's no need to add a role.\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\n      this.dom.toggle.setAttribute(\"role\", \"button\");\n    }\n\n    // Ensure both toggle and menu have IDs.\n    if (\n      this.dom.toggle.id === \"\" ||\n      this.elements.controlledMenu.dom.menu.id === \"\"\n    ) {\n      const randomString = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, \"\")\n        .substr(0, 10);\n\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      let finalID = randomString;\n\n      if (\n        !id.replace(/\\s/g, \"\").length &&\n        this.dom.toggle.getAttribute(\"aria-label\")\n      ) {\n        id = this.dom.toggle\n          .getAttribute(\"aria-label\")\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      }\n\n      if (id.replace(/\\s/g, \"\").length > 0) {\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\n\n        if (id.startsWith(\"-\")) {\n          id = id.substring(1);\n        }\n\n        if (id.endsWith(\"-\")) {\n          id = id.slice(0, -1);\n        }\n\n        finalID = `${id}-${finalID}`;\n      }\n\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\n      this.elements.controlledMenu.dom.menu.id =\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\n    }\n\n    // Set up proper aria label and control.\n    this.elements.controlledMenu.dom.menu.setAttribute(\n      \"aria-labelledby\",\n      this.dom.toggle.id\n    );\n    this.dom.toggle.setAttribute(\n      \"aria-controls\",\n      this.elements.controlledMenu.dom.menu.id\n    );\n\n    // Add closed class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach(value => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n  }\n\n  /**\n   * The DOM elements within the toggle.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the toggle.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The open state on the menu.\n   *\n   * @returns {boolean} - The open state.\n   */\n  get isOpen() {\n    return this.show;\n  }\n\n  /**\n   * Set the open state on the menu.\n   *\n   * @param {boolean} value - The open state.\n   */\n  set isOpen(value) {\n    isBoolean({ value });\n\n    this.show = value;\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   */\n  expand() {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\n      } else if (Array.isArray(openClass)) {\n        openClass.forEach(value => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach(value => {\n          this.elements.controlledMenu.dom.menu.classList.remove(value);\n        });\n      }\n    }\n\n    this.dom.toggle.dispatchEvent(this.expandEvent);\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   */\n  collapse() {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach(value => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\n      } else if (Array.isArray(openClass)) {\n        openClass.forEach(value => {\n          this.elements.controlledMenu.dom.menu.classList.remove(value);\n        });\n      }\n    }\n\n    this.dom.toggle.dispatchEvent(this.collapseEvent);\n  }\n\n  /**\n   * Opens the controlled menu.\n   */\n  open() {\n    this.isOpen = true;\n\n    // Expand the controlled menu and close all siblings.\n    this.expand();\n    this.closeSiblings();\n\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) this.elements.parentMenu.focusState = \"child\";\n    this.elements.controlledMenu.focusState = \"self\";\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   */\n  preview() {\n    this.isOpen = true;\n\n    // Expand the controlled menu and close all siblings.\n    this.expand();\n    this.closeSiblings();\n\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    this.elements.controlledMenu.focusState = \"none\";\n  }\n\n  /**\n   * Closes the controlled menu.\n   */\n  close() {\n    if (this.isOpen) {\n      this.isOpen = false;\n\n      // Close the controlled menu and close all siblings.\n      this.collapse();\n      this.closeChildren();\n\n      // Set proper focus states to parent & child.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n    }\n  }\n\n  /**\n   * Toggles the open state of the controlled menu.\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes all sibling menus.\n   */\n  closeSiblings() {\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.elements.submenuToggles.forEach(toggle => {\n        if (toggle !== this) toggle.close();\n      });\n    }\n  }\n\n  /**\n   * Closes all child menus.\n   */\n  closeChildren() {\n    this.elements.controlledMenu.elements.submenuToggles.forEach(toggle =>\n      toggle.close()\n    );\n  }\n\n  get [baseMenuToggleType]() {\n    return true;\n  }\n}\n\nexport default BaseMenuToggle;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport { isHTMLElement, isBoolean, isMenu, isMenuToggle } from \"./validate.js\";\n\n/**\n * A basic navigation link contained inside of a Menu.\n */\nclass BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}              param0                         - The menu item object.\n   * @param {HTMLElement}         param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}         param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {BaseMenu}            param0.parentMenu              - The parent menu.\n   * @param {boolean}             [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {BaseMenu|null}       [param0.childMenu = null]      - The child menu.\n   * @param {BaseMenuToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    // Run validations.\n    isHTMLElement({ menuItemElement, menuLinkElement });\n    isBoolean({ isSubmenuItem });\n\n    if (childMenu !== null) {\n      isMenu({ parentMenu, childMenu });\n    } else {\n      isMenu({ parentMenu });\n    }\n\n    if (toggle !== null) isMenuToggle({ toggle });\n\n    this.domElements = {\n      item: menuItemElement,\n      link: menuLinkElement,\n    };\n    this.menuElements = {\n      parentMenu,\n      childMenu,\n      toggle,\n    };\n    this.isController = isSubmenuItem;\n  }\n\n  /**\n   * Initialize the menu item.\n   */\n  initialize() {}\n\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the menu item.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @returns {boolean} - The submenu flag.\n   */\n  get isSubmenuItem() {\n    return this.isController;\n  }\n\n  /**\n   * Focuses the menu item's link if triggering event is valid.\n   */\n  focus() {\n    if (\n      this.elements.parentMenu.currentEvent === \"keyboard\" ||\n      (this.elements.parentMenu.currentEvent === \"mouse\" &&\n        this.elements.parentMenu.hoverType === \"dynamic\")\n    ) {\n      this.dom.link.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if triggering event is valid.\n   */\n  blur() {\n    if (\n      this.elements.parentMenu.currentEvent === \"keyboard\" ||\n      (this.elements.parentMenu.currentEvent === \"mouse\" &&\n        this.elements.parentMenu.hoverType === \"dynamic\")\n    ) {\n      this.dom.link.blur();\n    }\n  }\n}\n\nexport default BaseMenuItem;\n","/**\n * Retrieves the pressed key from an event.\n *\n * @param   {KeyboardEvent} event - The keyboard event.\n *\n * @returns {string} - The name of the key or an empty string.\n */\nexport function keyPress(event) {\n  try {\n    // Use event.key or event.keyCode to support older browsers.\n    const key = event.key || event.keyCode;\n    const keys = {\n      Enter: key === \"Enter\" || key === 13,\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\n      Home: key === \"Home\" || key === 36,\n      End: key === \"End\" || key === 35,\n      Character: !!key.match(/^[a-zA-Z]{1}$/),\n      Tab: key === \"Tab\" || key === 9,\n    };\n\n    return Object.keys(keys).find(key => keys[key] === true) || \"\";\n  } catch (error) {\n    // Return an empty string if something goes wrong.\n    return \"\";\n  }\n}\n\n/**\n * Stops an event from taking action.\n *\n * @param {Event} event - The event.\n */\nexport function preventEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n","import { baseMenuType } from \"./_baseTypes.js\";\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\nimport BaseMenuItem from \"./_baseMenuItem.js\";\nimport {\n  isHTMLElement,\n  isCSSSelector,\n  isBoolean,\n  isMenu,\n  isNumber,\n  isValidState,\n  isValidEvent,\n  isEventSupported,\n  isValidClassList,\n  isValidHoverType,\n} from \"./validate.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible navigation element in the DOM.\n */\nclass BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}               param0                               - The menu object.\n   * @param {HTMLElement}          param0.menuElement                   - The menu element in the DOM.\n   * @param {string}               [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}               [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}               [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}               [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}               [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null}     [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null}     [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string|string[]|null} [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string|string[]|null} [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}              [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {BaseMenu|null}        [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}               [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}               [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    // Run validations.\n    isBoolean({ isTopLevel });\n\n    if (submenuItemSelector !== \"\") {\n      isCSSSelector({\n        menuItemSelector,\n        menuLinkSelector,\n        submenuItemSelector,\n        submenuToggleSelector,\n        submenuSelector,\n      });\n    } else {\n      isCSSSelector({ menuItemSelector, menuLinkSelector });\n    }\n\n    if (controllerElement !== null || containerElement !== null) {\n      isHTMLElement({ menuElement, controllerElement, containerElement });\n    } else {\n      isHTMLElement({ menuElement });\n    }\n\n    if (parentMenu !== null) isMenu({ parentMenu });\n\n    this.domElements = {\n      menu: menuElement,\n      menuItems: [],\n      submenuItems: [],\n      submenuToggles: [],\n      submenus: [],\n      controller: controllerElement,\n      container: containerElement,\n    };\n    this.domSelectors = {\n      menuItems: menuItemSelector,\n      menuLinks: menuLinkSelector,\n      submenuItems: submenuItemSelector,\n      submenuToggles: submenuToggleSelector,\n      submenus: submenuSelector,\n    };\n    this.menuElements = {\n      menuItems: [],\n      submenuToggles: [],\n      controller: null,\n      parentMenu,\n      rootMenu: isTopLevel ? this : null,\n    };\n    this.openClass = openClass || \"\";\n    this.closeClass = closeClass || \"\";\n    this.root = isTopLevel;\n    this.currentChild = 0;\n    this.focusState = \"none\";\n    this.currentEvent = \"none\";\n    this.hoverType = hoverType;\n    this.hoverDelay = hoverDelay;\n\n    // Set default class types.\n    this.MenuType = BaseMenu;\n    this.MenuItemType = BaseMenuItem;\n    this.MenuToggleType = BaseMenuToggle;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    const { MenuToggleType } = this;\n\n    // Get the root menu if it doesn't exist.\n    if (this.elements.rootMenu === null) this.findRootMenu(this);\n\n    // Set all of the DOM elements.\n    this.setDOMElements();\n\n    if (this.isTopLevel) {\n      if (this.dom.controller && this.dom.container) {\n        // Create a new BaseMenuToggle to control the menu.\n        const toggle = new MenuToggleType({\n          menuToggleElement: this.dom.controller,\n          parentElement: this.dom.container,\n          controlledMenu: this,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n        });\n\n        this.menuElements.controller = toggle;\n      }\n    }\n\n    this.createChildElements();\n  }\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The CSS selectors available to the menu.\n   *\n   * @returns {object} - The selectors.\n   */\n  get selectors() {\n    return this.domSelectors;\n  }\n\n  /**\n   * The elements within the menu.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"open\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's open class(es).\n   *\n   * @returns {string|string[]} - The class(es).\n   */\n  get openClass() {\n    return this.isTopLevel\n      ? this.submenuOpenClass\n      : this.elements.rootMenu.openClass;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"closed\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's close class(es).\n   *\n   * @returns {string|string[]} - The class(es).\n   */\n  get closeClass() {\n    return this.isTopLevel\n      ? this.submenuCloseClass\n      : this.elements.rootMenu.closeClass;\n  }\n\n  /**\n   * A flag marking the root menu.\n   *\n   * @returns {boolean} - The top-level flag.\n   */\n  get isTopLevel() {\n    return this.root;\n  }\n\n  /**\n   * The index of the currently selected menu item in the menu.\n   *\n   * @returns {number} - The index.\n   */\n  get currentChild() {\n    return this.focussedChild;\n  }\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * @returns {string} - The state.\n   */\n  get focusState() {\n    return this.state;\n  }\n\n  /**\n   * This last event triggered on the menu.\n   *\n   * @returns {string} - The event type.\n   */\n  get currentEvent() {\n    return this.event;\n  }\n\n  /**\n   * The currently selected menu item.\n   *\n   * @returns {BaseMenuItem} - The menu item.\n   */\n  get currentMenuItem() {\n    return this.elements.menuItems[this.currentChild];\n  }\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hoverability.\n   *\n   * @returns {string} - The hover type.\n   */\n  get hoverType() {\n    return this.isTopLevel ? this.hover : this.elements.rootMenu.hoverType;\n  }\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hover delay.\n   *\n   * @returns {number} - The delay time.\n   */\n  get hoverDelay() {\n    return this.isTopLevel ? this.delay : this.elements.rootMenu.hoverDelay;\n  }\n\n  /**\n   * Set the class to apply when the menu is \"open\".\n   *\n   * @param {string} value - The class.\n   */\n  set openClass(value) {\n    isValidClassList({ openClass: value });\n\n    this.submenuOpenClass = value;\n  }\n\n  /**\n   * Set the class to apply when the menu is \"closed\".\n   *\n   * @param {string} value - The class.\n   */\n  set closeClass(value) {\n    isValidClassList({ closeClass: value });\n\n    this.submenuCloseClass = value;\n  }\n\n  /**\n   * Set the index currently selected menu item in the menu.\n   *\n   * @param {number} value - The index.\n   */\n  set currentChild(value) {\n    isNumber({ value });\n\n    this.focussedChild = value;\n  }\n\n  /**\n   * Set the state of the menu's focus.\n   *\n   * @param {string} value - The state.\n   */\n  set focusState(value) {\n    isValidState({ value });\n\n    this.state = value;\n  }\n\n  /**\n   * Set the last event triggered on the menu.\n   *\n   * @param {string} value - The event type.\n   */\n  set currentEvent(value) {\n    isValidEvent({ value });\n\n    this.event = value;\n  }\n\n  /**\n   * Set the type of hoverability for the menu.\n   *\n   * @param {string} value - The hover type.\n   */\n  set hoverType(value) {\n    isValidHoverType({ value });\n\n    this.hover = value;\n  }\n\n  /**\n   * Set the delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * @param {number} value - The delay time.\n   */\n  set hoverDelay(value) {\n    isNumber({ value });\n\n    this.delay = value;\n  }\n\n  /**\n   * Sets DOM elements within the menu.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  setDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isHTMLElement({ base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = item => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = domElements.filter(item =>\n            filter(item)\n          );\n        } else {\n          this.domElements[elementType] = domElements;\n        }\n      } else {\n        this.domElements[elementType] = domElements.filter(item =>\n          baseFilter(item)\n        );\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Adds an element to DOM elements within the menu.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  addDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isHTMLElement({ base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = item => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements.filter(item => filter(item)),\n          ];\n        } else {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements,\n          ];\n        }\n      } else {\n        this.domElements[elementType] = [\n          ...this.domElements[elementType],\n          ...domElements.filter(item => baseFilter(item)),\n        ];\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Clears DOM elements within the menu.\n   *\n   * @param {string} elementType - The type of element to clear.\n   */\n  clearDOMElementType(elementType) {\n    if (elementType === \"menu\") return;\n\n    if (Array.isArray(this.domElements[elementType])) {\n      this.domElements[elementType] = [];\n    } else if (typeof this.domElements[elementType] !== \"undefined\") {\n      this.domElements[elementType] = null;\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Sets all DOM elements within the menu.\n   */\n  setDOMElements() {\n    this.setDOMElementType(\"menuItems\");\n\n    if (this.selectors.submenuItems !== \"\") {\n      this.setDOMElementType(\"submenuItems\");\n\n      this.clearDOMElementType(\"submenuToggles\");\n      this.clearDOMElementType(\"submenus\");\n\n      this.dom.submenuItems.forEach(item => {\n        this.addDOMElementType(\"submenuToggles\", item);\n        this.addDOMElementType(\"submenus\", item);\n      });\n    }\n  }\n\n  /**\n   * Finds the root menu element.\n   *\n   * @param {BaseMenu} menu - The menu to check.\n   */\n  findRootMenu(menu) {\n    if (menu.isTopLevel) {\n      this.menuElements.rootMenu = menu;\n    } else if (menu.elements.parentMenu !== null) {\n      this.findRootMenu(menu.elements.parentMenu);\n    } else {\n      throw new Error(\"Cannot find root menu.\");\n    }\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   */\n  createChildElements() {\n    const { MenuType, MenuItemType, MenuToggleType } = this;\n\n    this.dom.menuItems.forEach(element => {\n      let menuItem;\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this.menuElements.submenuToggles.push(toggle);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n      } else {\n        const link = element.querySelector(this.selectors.menuLinks);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this.menuElements.menuItems.push(menuItem);\n    });\n  }\n\n  /**\n   * Handles focus events throughout the menu for proper menu use.\n   */\n  handleFocus() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"focus\", () => {\n        if (this.elements.parentMenu)\n          this.elements.parentMenu.focusState = \"child\";\n        if (menuItem.elements.childMenu)\n          menuItem.elements.childMenu.focusState = \"none\";\n\n        this.focusState = \"self\";\n        this.currentChild = index;\n      });\n    });\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   */\n  handleClick() {\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(\"mouseup\", event => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n\n    /**\n     * Toggles a toggle element.\n     *\n     * @param {BaseMenu}       menu - This menu.\n     * @param {BaseMenuToggle} toggle - The menu toggle\n     * @param {Event}          event - A Javascript event.\n     */\n    function toggleToggle(menu, toggle, event) {\n      preventEvent(event);\n\n      menu.currentEvent = \"mouse\";\n\n      toggle.toggle();\n\n      if (toggle.isOpen) {\n        menu.focusState = \"self\";\n        toggle.elements.controlledMenu.focusState = \"none\";\n      }\n    }\n\n    // Toggle submenus when their controllers are clicked.\n    this.elements.submenuToggles.forEach(toggle => {\n      if (isEventSupported(\"touchend\", toggle.dom.toggle)) {\n        toggle.dom.toggle.ontouchend = event => {\n          toggleToggle(this, toggle, event);\n        };\n      } else {\n        toggle.dom.toggle.onmouseup = event => {\n          toggleToggle(this, toggle, event);\n        };\n      }\n    });\n\n    // Open the this menu if it's controller is clicked.\n    if (this.isTopLevel && this.elements.controller) {\n      if (isEventSupported(\"touchend\", this.elements.controller.dom.toggle)) {\n        this.elements.controller.dom.toggle.ontouchend = event => {\n          toggleToggle(this, this.elements.controller, event);\n        };\n      } else {\n        this.elements.controller.dom.toggle.onmouseup = event => {\n          toggleToggle(this, this.elements.controller, event);\n        };\n      }\n    }\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   */\n  handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"mouseenter\", () => {\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            toggle => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\n            this.currentEvent = \"mouse\";\n            menuItem.elements.toggle.preview();\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"mouseleave\", () => {\n          if (this.hoverType === \"on\") {\n            setTimeout(() => {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }, this.hoverDelay);\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }, this.hoverDelay);\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keydown\", event => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", event => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n          this.elements.controller.open();\n          this.focusFirstChild();\n        }\n      });\n    }\n  }\n\n  /**\n   * Focus the menu.\n   */\n  focus() {\n    this.focusState = \"self\";\n\n    if (\n      this.currentEvent === \"keyboard\" ||\n      (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\")\n    ) {\n      this.dom.menu.focus();\n    }\n  }\n\n  /**\n   * Unfocus the menu.\n   */\n  blur() {\n    this.focusState = \"none\";\n\n    if (\n      this.currentEvent === \"keyboard\" ||\n      (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\")\n    ) {\n      this.dom.menu.blur();\n    }\n\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.close();\n    }\n  }\n\n  /**\n   * Focues the menu's first child.\n   */\n  focusFirstChild() {\n    this.blurCurrentChild();\n    this.currentChild = 0;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusLastChild() {\n    this.blurCurrentChild();\n    this.currentChild = this.elements.menuItems.length - 1;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    if (this.currentChild === this.elements.menuItems.length - 1) {\n      this.focusFirstChild();\n    } else {\n      this.blurCurrentChild();\n      this.currentChild = this.currentChild + 1;\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusPreviousChild() {\n    if (this.currentChild === 0) {\n      this.focusLastChild();\n    } else {\n      this.blurCurrentChild();\n      this.currentChild = this.currentChild - 1;\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's current child.\n   */\n  focusCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu's current child.\n   */\n  blurCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's next child starting with a specific letter.\n   *\n   * @param {string} char - The character to look for.\n   */\n  focusNextChildWithCharacter(char) {\n    // Ensure the character is lowercase just to be safe.\n    const match = char.toLowerCase();\n    let index = this.currentChild + 1;\n    let found = false;\n\n    while (!found && index < this.elements.menuItems.length) {\n      // Ensure the text in the item is lowercase just to be safe.\n      const text = this.elements.menuItems[\n        index\n      ].dom.item.innerText.toLowerCase();\n\n      // Focus the child if the text matches, otherwise move on.\n      if (text.startsWith(match)) {\n        found = true;\n        this.currentChild = index;\n        this.focusCurrentChild();\n      }\n\n      index++;\n    }\n  }\n\n  /**\n   * Focus the menu's controller.\n   */\n  focusController() {\n    if (this.dom.controller) {\n      if (this.currentEvent !== \"mouse\") {\n        this.dom.controller.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Focus the menu's container.\n   */\n  focusContainer() {\n    if (this.dom.container) {\n      if (this.currentEvent !== \"mouse\") {\n        this.dom.container.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Close all submenu children.\n   */\n  closeChildren() {\n    this.elements.submenuToggles.forEach(toggle => toggle.close());\n  }\n\n  get [baseMenuType]() {\n    return true;\n  }\n}\n\nexport default BaseMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a Menubar.\n */\nclass MenubarItem extends BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}             param0                         - The menu item object.\n   * @param {HTMLElement}        param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}        param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Menubar}            param0.parentMenu              - The parent menu.\n   * @param {boolean}            [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Menubar|null}       [param0.childMenu = null]      - The child menu.\n   * @param {MenubarToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    this.initialize();\n  }\n\n  /**\n   * Initialize the menu item by setting its tab index.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.item.setAttribute(\"role\", \"none\");\n    this.dom.link.setAttribute(\"role\", \"menuitem\");\n    this.dom.link.tabIndex = -1;\n  }\n\n  /**\n   * Focuses the menu item's link and set proper tabIndex.\n   */\n  focus() {\n    super.focus();\n\n    if (this.elements.parentMenu.isTopLevel) {\n      this.dom.link.tabIndex = 0;\n    }\n  }\n\n  /**\n   * Blurs the menu item's link and set proper tabIndex.\n   */\n  blur() {\n    super.blur();\n\n    if (this.elements.parentMenu.isTopLevel) {\n      this.dom.link.tabIndex = -1;\n    }\n  }\n}\n\nexport default MenubarItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/*\n * A link or button that controls the visibility of a Menubar.\n */\nclass MenubarToggle extends BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}               param0                       - The menu toggle object.\n   * @param {HTMLElement}          param0.menuToggleElement     - The toggle element in the DOM.\n   * @param {HTMLElement}          param0.parentElement         - The element containing the controlled menu.\n   * @param {Menubar}              param0.controlledMenu        - The menu controlled by this toggle.\n   * @param {string|string[]|null} [param0.openClass = \"show\"]  - The class to apply when the controlled menu is \"open\".\n   * @param {string|string[]|null} [param0.closeClass = \"hide\"] - The class to apply when the controlled menu is \"closed\".\n   * @param {Menubar|null}         [param0.parentMenu = null]   - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    parentMenu = null,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      openClass,\n      closeClass,\n      parentMenu,\n    });\n\n    this.initialize();\n  }\n}\n\nexport default MenubarToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport MenubarItem from \"./menubarItem.js\";\nimport MenubarToggle from \"./menubarToggle.js\";\nimport { keyPress, preventEvent } from \"./eventHandlers.js\";\n\n/**\n * An accessible menubar navigation in the DOM.\n *\n * See https://www.w3.org/TR/wai-aria-practices-1.2/examples/menubar/menubar-1/menubar-1.html\n */\nclass Menubar extends BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}           param0                               - The menu object.\n   * @param {HTMLElement}      param0.menuElement                   - The menu element in the DOM.\n   * @param {string}           [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}           [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}           [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}           [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}           [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null} [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null} [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string}           [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string}           [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}          [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {Menubar|null}     [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}           [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}           [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    this.MenuType = Menubar;\n    this.MenuItemType = MenubarItem;\n    this.MenuToggleType = MenubarToggle;\n\n    this.initialize();\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.menu.setAttribute(\"role\", \"menubar\");\n\n    this.handleFocus();\n    this.handleClick();\n    this.handleHover();\n    this.handleKeydown();\n    this.handleKeyup();\n\n    this.elements.menuItems[0].dom.link.tabIndex = 0;\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    super.handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", event => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (key === \"Tab\") {\n        // Hitting Tab:\n        // - Moves focus out of the menu.\n        if (this.elements.rootMenu.focusState !== \"none\") {\n          this.elements.rootMenu.blur();\n          this.elements.rootMenu.closeChildren();\n        } else {\n          this.elements.rootMenu.focus();\n        }\n      }\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (key === \"Character\") {\n        preventEvent(event);\n      } else if (this.isTopLevel) {\n        if (this.focusState === \"self\") {\n          const keys = [\"ArrowRight\", \"ArrowLeft\", \"Home\", \"End\"];\n          const submenuKeys = [\"Space\", \"Enter\", \"ArrowDown\", \"ArrowUp\"];\n          const controllerKeys = [\"Escape\"];\n\n          if (keys.includes(key)) {\n            preventEvent(event);\n          } else if (\n            this.currentMenuItem.isSubmenuItem &&\n            submenuKeys.includes(key)\n          ) {\n            preventEvent(event);\n          } else if (this.elements.controller && controllerKeys.includes(key)) {\n            preventEvent(event);\n          }\n        }\n      } else {\n        const keys = [\n          \"Escape\",\n          \"ArrowRight\",\n          \"ArrowLeft\",\n          \"ArrowDown\",\n          \"ArrowUp\",\n          \"Home\",\n          \"End\",\n        ];\n        const submenuKeys = [\"Space\", \"Enter\"];\n\n        if (keys.includes(key)) {\n          preventEvent(event);\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    super.handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", event => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n      const { altKey, crtlKey, metaKey } = event;\n      const modifier = altKey || crtlKey || metaKey;\n\n      if (key === \"Character\" && !modifier) {\n        // Hitting Character:\n        // - Moves focus to next item in the menubar having a name that starts with the typed character.\n        // - If none of the items have a name starting with the typed character, focus does not move.\n        preventEvent(event);\n        this.focusNextChildWithCharacter(event.key);\n      } else if (this.isTopLevel) {\n        if (this.focusState === \"self\") {\n          if (key === \"Space\" || key === \"Enter\") {\n            // Hitting Space or Enter:\n            // - Opens submenu and moves focus to first item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\n              });\n            }\n          } else if (key === \"ArrowRight\") {\n            // Hitting the Right Arrow:\n            // - Moves focus to the next item in the menubar.\n            // - If focus is on the last item, moves focus to the first item.\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\n            preventEvent(event);\n\n            // Store the current item's info if its an open dropdown.\n            const previousChildOpen =\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen;\n\n            this.focusNextChild();\n\n            // Open the newly focussed submenu if applicable.\n            if (previousChildOpen) {\n              if (this.currentMenuItem.isSubmenuItem) {\n                this.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.currentMenuItem.elements.toggle.preview();\n              } else {\n                this.closeChildren();\n              }\n            }\n          } else if (key === \"ArrowLeft\") {\n            // Hitting the Left Arrow:\n            // - Moves focus to the previous item in the menubar.\n            // - If focus is on the first item, moves focus to the last item.\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\n            preventEvent(event);\n\n            // Store the current item's info if its an open dropdown.\n            const previousChildOpen =\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen;\n\n            this.focusPreviousChild();\n\n            // Open the newly focussed submenu if applicable.\n            if (previousChildOpen) {\n              if (this.currentMenuItem.isSubmenuItem) {\n                this.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.currentMenuItem.elements.toggle.preview();\n              } else {\n                this.closeChildren();\n              }\n            }\n          } else if (key === \"ArrowDown\") {\n            // Hitting the Down Arrow:\n            // - Opens submenu and moves focus to first item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\n              });\n            }\n          } else if (key === \"ArrowUp\") {\n            // Hitting the Up Arrow:\n            // - Opens submenu and moves focus to last item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusLastChild();\n              });\n            }\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - Moves focus to first item in the menubar.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - Moves focus to last item in the menubar.\n            preventEvent(event);\n            this.focusLastChild();\n          } else if (key === \"Escape\") {\n            // Hitting Escape:\n            // - Closes menu.\n            const hasOpenChild = this.elements.submenuToggles.some(\n              toggle => toggle.isOpen\n            );\n\n            if (hasOpenChild) {\n              preventEvent(event);\n              this.closeChildren();\n            } else if (\n              this.isTopLevel &&\n              this.elements.controller &&\n              this.elements.controller.isOpen\n            ) {\n              preventEvent(event);\n              this.elements.controller.close();\n              this.focusController();\n            }\n          }\n        }\n      } else {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - Activates menu item, causing the link to be activated.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n            this.currentMenuItem.elements.toggle.open();\n            // This ensures the the menu is _visually_ open before the child is focussed.\n            requestAnimationFrame(() => {\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            });\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape:\n          // - Closes submenu.\n          // - Moves focus to parent menubar item.\n          preventEvent(event);\n          this.elements.rootMenu.closeChildren();\n          this.elements.rootMenu.focusCurrentChild();\n        } else if (key === \"ArrowRight\") {\n          // Hitting the Right Arrow:\n          // - If focus is on an item with a submenu, opens the submenu and places focus on the first item.\n          // - If focus is on an item that does not have a submenu:\n          //   - Closes submenu.\n          //   - Moves focus to next item in the menubar.\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n            this.currentMenuItem.elements.toggle.open();\n            // This ensures the the menu is _visually_ open before the child is focussed.\n            requestAnimationFrame(() => {\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            });\n          } else {\n            preventEvent(event);\n            this.elements.rootMenu.closeChildren();\n            this.elements.rootMenu.focusNextChild();\n\n            if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\n              this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\n            }\n          }\n        } else if (key === \"ArrowLeft\") {\n          // Hitting the Left Arrow:\n          // - Closes submenu and moves focus to parent menu item.\n          // - If parent menu item is in the menubar, also:\n          //   - moves focus to previous item in the menubar.\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\n          if (this.elements.parentMenu.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.elements.parentMenu.currentMenuItem.elements.toggle.close();\n            this.elements.parentMenu.focusCurrentChild();\n\n            if (this.elements.parentMenu === this.elements.rootMenu) {\n              this.elements.rootMenu.closeChildren();\n              this.elements.rootMenu.focusPreviousChild();\n\n              if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\n                this.elements.rootMenu.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\n              }\n            }\n          }\n        } else if (key === \"ArrowDown\") {\n          // Hitting the Down Arrow:\n          // - Moves focus to the next item in the menubar.\n          // - If focus is on the last item, moves focus to the first item.\n          preventEvent(event);\n          this.focusNextChild();\n        } else if (key === \"ArrowUp\") {\n          // Hitting the Up Arrow:\n          // - Moves focus to the previous item in the menubar.\n          // - If focus is on the first item, moves focus to the last item.\n          preventEvent(event);\n          this.focusPreviousChild();\n        } else if (key === \"Home\") {\n          // Hitting Home:\n          // - Moves focus to first item in the menubar.\n          preventEvent(event);\n          this.focusFirstChild();\n        } else if (key === \"End\") {\n          // Hitting End:\n          // - Moves focus to last item in the menubar.\n          preventEvent(event);\n          this.focusLastChild();\n        }\n      }\n    });\n  }\n}\n\nexport default Menubar;\n"],"names":["baseMenuType","Symbol","baseMenuToggleType","isHTMLElement","elements","type","TypeError","key","HTMLElement","error","console","isCSSSelector","values","document","querySelector","isBoolean","isNumber","isString","isMenu","isTag","tagName","tag","toLowerCase","check","isMenuToggle","isValidState","validStates","includes","join","isValidEvent","validEvents","isEventSupported","event","element","eventProp","isValidClassList","Array","isArray","forEach","value","classValue","isValidHoverType","BaseMenuToggle","menuToggleElement","parentElement","controlledMenu","parentMenu","domElements","toggle","parent","menuElements","isOpen","expandEvent","CustomEvent","bubbles","detail","collapseEvent","initialize","closeClass","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","classList","add","show","openClass","remove","dispatchEvent","expand","closeSiblings","focusState","collapse","closeChildren","currentChild","blur","close","open","submenuToggles","BaseMenuItem","menuItemElement","menuLinkElement","isSubmenuItem","childMenu","item","link","isController","currentEvent","hoverType","focus","keyPress","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","match","Tab","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverDelay","menuItems","submenuItems","submenus","controller","container","domSelectors","menuLinks","rootMenu","root","MenuType","MenuItemType","MenuToggleType","findRootMenu","setDOMElements","createChildElements","submenuOpenClass","submenuCloseClass","focussedChild","state","hover","delay","elementType","base","filter","selectors","baseElement","baseFilter","selector","from","querySelectorAll","Error","setDOMElementType","clearDOMElementType","addDOMElementType","menuItem","toggler","submenu","push","index","addEventListener","contains","target","toggleToggle","ontouchend","onmouseup","preview","some","focusCurrentChild","setTimeout","focusFirstChild","blurCurrentChild","focusLastChild","currentMenuItem","char","found","text","MenubarItem","tabIndex","MenubarToggle","Menubar","handleFocus","handleClick","handleHover","handleKeydown","handleKeyup","submenuKeys","controllerKeys","altKey","crtlKey","metaKey","modifier","focusNextChildWithCharacter","requestAnimationFrame","previousChildOpen","focusNextChild","focusPreviousChild","hasOpenChild","focusController"],"mappings":"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"}