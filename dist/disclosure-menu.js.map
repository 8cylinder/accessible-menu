{"version":3,"file":"disclosure-menu.js","sources":["../src/_baseTypes.js","../src/validate.js","../src/_baseMenuToggle.js","../src/_baseMenuItem.js","../src/eventHandlers.js","../src/_baseMenu.js","../src/disclosureMenuItem.js","../src/disclosureMenuToggle.js","../src/disclosureMenu.js"],"sourcesContent":["export const baseMenuType = Symbol(\"BaseMenu\");\nexport const baseMenuToggleType = Symbol(\"BaseMenuToggle\");\n","import { baseMenuType, baseMenuToggleType } from \"./_baseTypes.js\";\n\n/**\n * Checks to see if the provided elements are instances of HTMLElement.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isHTMLElement(elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const type = typeof elements;\n\n      throw new TypeError(\n        `Elements given to isHTMLElement() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof HTMLElement)) {\n        const type = typeof elements[key];\n        throw new TypeError(\n          `${key} must be an instance of HTMLElement. ${type} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are valid CSS selectors.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isCSSSelector(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isCSSSelector() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      try {\n        document.querySelector(values[key]);\n      } catch (error) {\n        throw new TypeError(\n          `${key} must be a valid CSS selector. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are booleans.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isBoolean(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isBoolean() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"boolean\") {\n        throw new TypeError(`${key} must be a boolean. ${type} given.`);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are numbers.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isNumber(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isNumber() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"number\") {\n        throw new TypeError(`${key} must be a number. ${type} given.`);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isString(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isString() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        throw new TypeError(`${key} must be a string. ${type} given.`);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are instances of Event.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isEvent(elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const type = typeof elements;\n\n      throw new TypeError(\n        `Elements given to isEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof Event)) {\n        const type = typeof elements[key];\n        throw new TypeError(\n          `${key} must be an instance of Event. ${type} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are instances of KeyboardEvent.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isKeyboardEvent(elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const type = typeof elements;\n\n      throw new TypeError(\n        `Elements given to isKeyboardEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof KeyboardEvent)) {\n        const type = typeof elements[key];\n        throw new TypeError(\n          `${key} must be an instance of KeyboardEvent. ${type} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are a menus.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isMenu(elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const type = typeof elements;\n\n      throw new TypeError(\n        `Elements given to isMenu() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!elements[key][baseMenuType]) {\n        const type = typeof elements[key];\n\n        throw new TypeError(\n          `${key} must be an instance of BaseMenu. ${type} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are using a specific tag.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * @param   {string} tagName  - The name of the tag.\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isTag(tagName, elements) {\n  if (isString({ tagName }) && isHTMLElement(elements)) {\n    const tag = tagName.toLowerCase();\n    let check = true;\n\n    for (const key in elements) {\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\n    }\n\n    return check;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are a menu toggles.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isMenuToggle(elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const type = typeof elements;\n\n      throw new TypeError(\n        `Elements given to isMenuToggle() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!elements[key][baseMenuToggleType]) {\n        const type = typeof elements[key];\n\n        throw new TypeError(\n          `${key} must be an instance of BaseMenuToggle. ${type} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid focus states for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidState(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isValidState() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validStates = [\"none\", \"self\", \"child\"];\n\n    for (const key in values) {\n      if (!validStates.includes(values[key])) {\n        throw new TypeError(\n          `${key} must be one of the following values: ${validStates.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid event types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidEvent(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isValidEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"none\", \"mouse\", \"keyboard\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if an event is supported by a node.\n *\n * @param   {string}      event   - The event type.\n * @param   {HTMLElement} element - The element to check.\n *\n * @returns {boolean} - The result.\n */\nexport function isEventSupported(event, element) {\n  isString({ event });\n  isHTMLElement({ element });\n\n  const eventProp = `on${event}`;\n\n  return typeof element[eventProp] !== \"undefined\";\n}\n\n/**\n * Checks to see if the provided value is either a string or an array of strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidClassList(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isValidClassList() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        if (Array.isArray(values[key])) {\n          values[key].forEach(value => {\n            isString({ classValue: value });\n          });\n        } else {\n          throw new TypeError(\n            `${key} must be a string or an array of strings. ${type} given.`\n          );\n        }\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid hover types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidHoverType(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `Values given to isValidHoverType() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"off\", \"on\", \"dynamic\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport { baseMenuToggleType } from \"./_baseTypes.js\";\nimport { isHTMLElement, isMenu, isTag, isBoolean } from \"./validate.js\";\n\n/*\n * A link or button that controls the visibility of a Menu.\n */\nclass BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}               param0                       - The menu toggle object.\n   * @param {HTMLElement}          param0.menuToggleElement     - The toggle element in the DOM.\n   * @param {HTMLElement}          param0.parentElement         - The element containing the controlled menu.\n   * @param {BaseMenu}             param0.controlledMenu        - The menu controlled by this toggle.\n   * @param {BaseMenu|null}        [param0.parentMenu = null]   - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n  }) {\n    // Run validations.\n    isHTMLElement({ menuToggleElement, parentElement });\n\n    if (parentMenu !== null) {\n      isMenu({ controlledMenu, parentMenu });\n    } else {\n      isMenu({ controlledMenu });\n    }\n\n    this.domElements = {\n      toggle: menuToggleElement,\n      parent: parentElement,\n    };\n    this.menuElements = {\n      controlledMenu,\n      parentMenu,\n    };\n    this.isOpen = false;\n\n    this.expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n    this.collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n\n    this.initialize();\n  }\n\n  /**\n   * Initialize the toggle by ensuring WAI-ARIA values are set,\n   * handling click events, and adding new keydown events.\n   */\n  initialize() {\n    const { closeClass } = this.elements.controlledMenu;\n\n    // Add WAI-ARIA properties.\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // If the toggle element is a button, there's no need to add a role.\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\n      this.dom.toggle.setAttribute(\"role\", \"button\");\n    }\n\n    // Ensure both toggle and menu have IDs.\n    if (\n      this.dom.toggle.id === \"\" ||\n      this.elements.controlledMenu.dom.menu.id === \"\"\n    ) {\n      const randomString = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, \"\")\n        .substr(0, 10);\n\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      let finalID = randomString;\n\n      if (\n        !id.replace(/\\s/g, \"\").length &&\n        this.dom.toggle.getAttribute(\"aria-label\")\n      ) {\n        id = this.dom.toggle\n          .getAttribute(\"aria-label\")\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      }\n\n      if (id.replace(/\\s/g, \"\").length > 0) {\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\n\n        if (id.startsWith(\"-\")) {\n          id = id.substring(1);\n        }\n\n        if (id.endsWith(\"-\")) {\n          id = id.slice(0, -1);\n        }\n\n        finalID = `${id}-${finalID}`;\n      }\n\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\n      this.elements.controlledMenu.dom.menu.id =\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\n    }\n\n    // Set up proper aria label and control.\n    this.elements.controlledMenu.dom.menu.setAttribute(\n      \"aria-labelledby\",\n      this.dom.toggle.id\n    );\n    this.dom.toggle.setAttribute(\n      \"aria-controls\",\n      this.elements.controlledMenu.dom.menu.id\n    );\n\n    // Add closed class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach(value => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n  }\n\n  /**\n   * The DOM elements within the toggle.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the toggle.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The open state on the menu.\n   *\n   * @returns {boolean} - The open state.\n   */\n  get isOpen() {\n    return this.show;\n  }\n\n  /**\n   * Set the open state on the menu.\n   *\n   * @param {boolean} value - The open state.\n   */\n  set isOpen(value) {\n    isBoolean({ value });\n\n    this.show = value;\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   */\n  expand() {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\n      } else if (Array.isArray(openClass)) {\n        openClass.forEach(value => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach(value => {\n          this.elements.controlledMenu.dom.menu.classList.remove(value);\n        });\n      }\n    }\n\n    this.dom.toggle.dispatchEvent(this.expandEvent);\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   */\n  collapse() {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach(value => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\n      } else if (Array.isArray(openClass)) {\n        openClass.forEach(value => {\n          this.elements.controlledMenu.dom.menu.classList.remove(value);\n        });\n      }\n    }\n\n    this.dom.toggle.dispatchEvent(this.collapseEvent);\n  }\n\n  /**\n   * Opens the controlled menu.\n   */\n  open() {\n    this.isOpen = true;\n\n    // Expand the controlled menu and close all siblings.\n    this.expand();\n    this.closeSiblings();\n\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) this.elements.parentMenu.focusState = \"child\";\n    this.elements.controlledMenu.focusState = \"self\";\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   */\n  preview() {\n    this.isOpen = true;\n\n    // Expand the controlled menu and close all siblings.\n    this.expand();\n    this.closeSiblings();\n\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    this.elements.controlledMenu.focusState = \"none\";\n  }\n\n  /**\n   * Closes the controlled menu.\n   */\n  close() {\n    if (this.isOpen) {\n      this.isOpen = false;\n\n      // Close the controlled menu and close all siblings.\n      this.collapse();\n      this.closeChildren();\n\n      // Set proper focus states to parent & child.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n    }\n  }\n\n  /**\n   * Toggles the open state of the controlled menu.\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes all sibling menus.\n   */\n  closeSiblings() {\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.elements.submenuToggles.forEach(toggle => {\n        if (toggle !== this) toggle.close();\n      });\n    }\n  }\n\n  /**\n   * Closes all child menus.\n   */\n  closeChildren() {\n    this.elements.controlledMenu.elements.submenuToggles.forEach(toggle =>\n      toggle.close()\n    );\n  }\n\n  get [baseMenuToggleType]() {\n    return true;\n  }\n}\n\nexport default BaseMenuToggle;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport { isHTMLElement, isBoolean, isMenu, isMenuToggle } from \"./validate.js\";\n\n/**\n * A basic navigation link contained inside of a Menu.\n */\nclass BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}              param0                         - The menu item object.\n   * @param {HTMLElement}         param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}         param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {BaseMenu}            param0.parentMenu              - The parent menu.\n   * @param {boolean}             [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {BaseMenu|null}       [param0.childMenu = null]      - The child menu.\n   * @param {BaseMenuToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    // Run validations.\n    isHTMLElement({ menuItemElement, menuLinkElement });\n    isBoolean({ isSubmenuItem });\n\n    if (childMenu !== null) {\n      isMenu({ parentMenu, childMenu });\n    } else {\n      isMenu({ parentMenu });\n    }\n\n    if (toggle !== null) isMenuToggle({ toggle });\n\n    this.domElements = {\n      item: menuItemElement,\n      link: menuLinkElement,\n    };\n    this.menuElements = {\n      parentMenu,\n      childMenu,\n      toggle,\n    };\n    this.isController = isSubmenuItem;\n  }\n\n  /**\n   * Initialize the menu item.\n   */\n  initialize() {}\n\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the menu item.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @returns {boolean} - The submenu flag.\n   */\n  get isSubmenuItem() {\n    return this.isController;\n  }\n\n  /**\n   * Focuses the menu item's link if triggering event is valid.\n   */\n  focus() {\n    if (\n      this.elements.parentMenu.currentEvent === \"keyboard\" ||\n      (this.elements.parentMenu.currentEvent === \"mouse\" &&\n        this.elements.parentMenu.hoverType === \"dynamic\")\n    ) {\n      this.dom.link.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if triggering event is valid.\n   */\n  blur() {\n    if (\n      this.elements.parentMenu.currentEvent === \"keyboard\" ||\n      (this.elements.parentMenu.currentEvent === \"mouse\" &&\n        this.elements.parentMenu.hoverType === \"dynamic\")\n    ) {\n      this.dom.link.blur();\n    }\n  }\n}\n\nexport default BaseMenuItem;\n","/**\n * Retrieves the pressed key from an event.\n *\n * @param   {KeyboardEvent} event - The keyboard event.\n *\n * @returns {string} - The name of the key or an empty string.\n */\nexport function keyPress(event) {\n  try {\n    // Use event.key or event.keyCode to support older browsers.\n    const key = event.key || event.keyCode;\n    const keys = {\n      Enter: key === \"Enter\" || key === 13,\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\n      Home: key === \"Home\" || key === 36,\n      End: key === \"End\" || key === 35,\n      Character: !!key.match(/^[a-zA-Z]{1}$/),\n      Tab: key === \"Tab\" || key === 9,\n    };\n\n    return Object.keys(keys).find(key => keys[key] === true) || \"\";\n  } catch (error) {\n    // Return an empty string if something goes wrong.\n    return \"\";\n  }\n}\n\n/**\n * Stops an event from taking action.\n *\n * @param {Event} event - The event.\n */\nexport function preventEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n","import { baseMenuType } from \"./_baseTypes.js\";\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\nimport BaseMenuItem from \"./_baseMenuItem.js\";\nimport {\n  isHTMLElement,\n  isCSSSelector,\n  isBoolean,\n  isMenu,\n  isNumber,\n  isValidState,\n  isValidEvent,\n  isEventSupported,\n  isValidClassList,\n  isValidHoverType,\n} from \"./validate.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible navigation element in the DOM.\n */\nclass BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}               param0                               - The menu object.\n   * @param {HTMLElement}          param0.menuElement                   - The menu element in the DOM.\n   * @param {string}               [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}               [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}               [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}               [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}               [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null}     [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null}     [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string|string[]|null} [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string|string[]|null} [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}              [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {BaseMenu|null}        [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}               [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}               [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    // Run validations.\n    isBoolean({ isTopLevel });\n\n    if (submenuItemSelector !== \"\") {\n      isCSSSelector({\n        menuItemSelector,\n        menuLinkSelector,\n        submenuItemSelector,\n        submenuToggleSelector,\n        submenuSelector,\n      });\n    } else {\n      isCSSSelector({ menuItemSelector, menuLinkSelector });\n    }\n\n    if (controllerElement !== null || containerElement !== null) {\n      isHTMLElement({ menuElement, controllerElement, containerElement });\n    } else {\n      isHTMLElement({ menuElement });\n    }\n\n    if (parentMenu !== null) isMenu({ parentMenu });\n\n    this.domElements = {\n      menu: menuElement,\n      menuItems: [],\n      submenuItems: [],\n      submenuToggles: [],\n      submenus: [],\n      controller: controllerElement,\n      container: containerElement,\n    };\n    this.domSelectors = {\n      menuItems: menuItemSelector,\n      menuLinks: menuLinkSelector,\n      submenuItems: submenuItemSelector,\n      submenuToggles: submenuToggleSelector,\n      submenus: submenuSelector,\n    };\n    this.menuElements = {\n      menuItems: [],\n      submenuToggles: [],\n      controller: null,\n      parentMenu,\n      rootMenu: isTopLevel ? this : null,\n    };\n    this.openClass = openClass || \"\";\n    this.closeClass = closeClass || \"\";\n    this.root = isTopLevel;\n    this.currentChild = 0;\n    this.focusState = \"none\";\n    this.currentEvent = \"none\";\n    this.hoverType = hoverType;\n    this.hoverDelay = hoverDelay;\n\n    // Set default class types.\n    this.MenuType = BaseMenu;\n    this.MenuItemType = BaseMenuItem;\n    this.MenuToggleType = BaseMenuToggle;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    const { MenuToggleType } = this;\n\n    // Get the root menu if it doesn't exist.\n    if (this.elements.rootMenu === null) this.findRootMenu(this);\n\n    // Set all of the DOM elements.\n    this.setDOMElements();\n\n    if (this.isTopLevel) {\n      if (this.dom.controller && this.dom.container) {\n        // Create a new BaseMenuToggle to control the menu.\n        const toggle = new MenuToggleType({\n          menuToggleElement: this.dom.controller,\n          parentElement: this.dom.container,\n          controlledMenu: this,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n        });\n\n        this.menuElements.controller = toggle;\n      }\n    }\n\n    this.createChildElements();\n  }\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The CSS selectors available to the menu.\n   *\n   * @returns {object} - The selectors.\n   */\n  get selectors() {\n    return this.domSelectors;\n  }\n\n  /**\n   * The elements within the menu.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"open\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's open class(es).\n   *\n   * @returns {string|string[]} - The class(es).\n   */\n  get openClass() {\n    return this.isTopLevel\n      ? this.submenuOpenClass\n      : this.elements.rootMenu.openClass;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"closed\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's close class(es).\n   *\n   * @returns {string|string[]} - The class(es).\n   */\n  get closeClass() {\n    return this.isTopLevel\n      ? this.submenuCloseClass\n      : this.elements.rootMenu.closeClass;\n  }\n\n  /**\n   * A flag marking the root menu.\n   *\n   * @returns {boolean} - The top-level flag.\n   */\n  get isTopLevel() {\n    return this.root;\n  }\n\n  /**\n   * The index of the currently selected menu item in the menu.\n   *\n   * @returns {number} - The index.\n   */\n  get currentChild() {\n    return this.focussedChild;\n  }\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * @returns {string} - The state.\n   */\n  get focusState() {\n    return this.state;\n  }\n\n  /**\n   * This last event triggered on the menu.\n   *\n   * @returns {string} - The event type.\n   */\n  get currentEvent() {\n    return this.event;\n  }\n\n  /**\n   * The currently selected menu item.\n   *\n   * @returns {BaseMenuItem} - The menu item.\n   */\n  get currentMenuItem() {\n    return this.elements.menuItems[this.currentChild];\n  }\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hoverability.\n   *\n   * @returns {string} - The hover type.\n   */\n  get hoverType() {\n    return this.isTopLevel ? this.hover : this.elements.rootMenu.hoverType;\n  }\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hover delay.\n   *\n   * @returns {number} - The delay time.\n   */\n  get hoverDelay() {\n    return this.isTopLevel ? this.delay : this.elements.rootMenu.hoverDelay;\n  }\n\n  /**\n   * Set the class to apply when the menu is \"open\".\n   *\n   * @param {string} value - The class.\n   */\n  set openClass(value) {\n    isValidClassList({ openClass: value });\n\n    this.submenuOpenClass = value;\n  }\n\n  /**\n   * Set the class to apply when the menu is \"closed\".\n   *\n   * @param {string} value - The class.\n   */\n  set closeClass(value) {\n    isValidClassList({ closeClass: value });\n\n    this.submenuCloseClass = value;\n  }\n\n  /**\n   * Set the index currently selected menu item in the menu.\n   *\n   * @param {number} value - The index.\n   */\n  set currentChild(value) {\n    isNumber({ value });\n\n    this.focussedChild = value;\n  }\n\n  /**\n   * Set the state of the menu's focus.\n   *\n   * @param {string} value - The state.\n   */\n  set focusState(value) {\n    isValidState({ value });\n\n    this.state = value;\n  }\n\n  /**\n   * Set the last event triggered on the menu.\n   *\n   * @param {string} value - The event type.\n   */\n  set currentEvent(value) {\n    isValidEvent({ value });\n\n    this.event = value;\n  }\n\n  /**\n   * Set the type of hoverability for the menu.\n   *\n   * @param {string} value - The hover type.\n   */\n  set hoverType(value) {\n    isValidHoverType({ value });\n\n    this.hover = value;\n  }\n\n  /**\n   * Set the delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * @param {number} value - The delay time.\n   */\n  set hoverDelay(value) {\n    isNumber({ value });\n\n    this.delay = value;\n  }\n\n  /**\n   * Sets DOM elements within the menu.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  setDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isHTMLElement({ base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = item => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = domElements.filter(item =>\n            filter(item)\n          );\n        } else {\n          this.domElements[elementType] = domElements;\n        }\n      } else {\n        this.domElements[elementType] = domElements.filter(item =>\n          baseFilter(item)\n        );\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Adds an element to DOM elements within the menu.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  addDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isHTMLElement({ base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = item => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements.filter(item => filter(item)),\n          ];\n        } else {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements,\n          ];\n        }\n      } else {\n        this.domElements[elementType] = [\n          ...this.domElements[elementType],\n          ...domElements.filter(item => baseFilter(item)),\n        ];\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Clears DOM elements within the menu.\n   *\n   * @param {string} elementType - The type of element to clear.\n   */\n  clearDOMElementType(elementType) {\n    if (elementType === \"menu\") return;\n\n    if (Array.isArray(this.domElements[elementType])) {\n      this.domElements[elementType] = [];\n    } else if (typeof this.domElements[elementType] !== \"undefined\") {\n      this.domElements[elementType] = null;\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Sets all DOM elements within the menu.\n   */\n  setDOMElements() {\n    this.setDOMElementType(\"menuItems\");\n\n    if (this.selectors.submenuItems !== \"\") {\n      this.setDOMElementType(\"submenuItems\");\n\n      this.clearDOMElementType(\"submenuToggles\");\n      this.clearDOMElementType(\"submenus\");\n\n      this.dom.submenuItems.forEach(item => {\n        this.addDOMElementType(\"submenuToggles\", item);\n        this.addDOMElementType(\"submenus\", item);\n      });\n    }\n  }\n\n  /**\n   * Finds the root menu element.\n   *\n   * @param {BaseMenu} menu - The menu to check.\n   */\n  findRootMenu(menu) {\n    if (menu.isTopLevel) {\n      this.menuElements.rootMenu = menu;\n    } else if (menu.elements.parentMenu !== null) {\n      this.findRootMenu(menu.elements.parentMenu);\n    } else {\n      throw new Error(\"Cannot find root menu.\");\n    }\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   */\n  createChildElements() {\n    const { MenuType, MenuItemType, MenuToggleType } = this;\n\n    this.dom.menuItems.forEach(element => {\n      let menuItem;\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this.menuElements.submenuToggles.push(toggle);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n      } else {\n        const link = element.querySelector(this.selectors.menuLinks);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this.menuElements.menuItems.push(menuItem);\n    });\n  }\n\n  /**\n   * Handles focus events throughout the menu for proper menu use.\n   */\n  handleFocus() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"focus\", () => {\n        if (this.elements.parentMenu)\n          this.elements.parentMenu.focusState = \"child\";\n        if (menuItem.elements.childMenu)\n          menuItem.elements.childMenu.focusState = \"none\";\n\n        this.focusState = \"self\";\n        this.currentChild = index;\n      });\n    });\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   */\n  handleClick() {\n    /**\n     * Toggles a toggle element.\n     *\n     * @param {BaseMenu}       menu - This menu.\n     * @param {BaseMenuToggle} toggle - The menu toggle\n     * @param {Event}          event - A Javascript event.\n     */\n    function toggleToggle(menu, toggle, event) {\n      preventEvent(event);\n\n      menu.currentEvent = \"mouse\";\n\n      toggle.toggle();\n\n      if (toggle.isOpen) {\n        menu.focusState = \"self\";\n        toggle.elements.controlledMenu.focusState = \"none\";\n      }\n    }\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(\"mouseup\", event => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n\n    // Toggle submenus when their controllers are clicked.\n    this.elements.submenuToggles.forEach(toggle => {\n      if (isEventSupported(\"touchend\", toggle.dom.toggle)) {\n        toggle.dom.toggle.ontouchend = event => {\n          toggleToggle(this, toggle, event);\n        };\n      } else {\n        toggle.dom.toggle.onmouseup = event => {\n          toggleToggle(this, toggle, event);\n        };\n      }\n    });\n\n    // Open the this menu if it's controller is clicked.\n    if (this.isTopLevel && this.elements.controller) {\n      if (isEventSupported(\"touchend\", this.elements.controller.dom.toggle)) {\n        this.elements.controller.dom.toggle.ontouchend = event => {\n          toggleToggle(this, this.elements.controller, event);\n        };\n      } else {\n        this.elements.controller.dom.toggle.onmouseup = event => {\n          toggleToggle(this, this.elements.controller, event);\n        };\n      }\n    }\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   */\n  handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"mouseenter\", () => {\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            toggle => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\n            this.currentEvent = \"mouse\";\n            menuItem.elements.toggle.preview();\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"mouseleave\", () => {\n          if (this.hoverType === \"on\") {\n            setTimeout(() => {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }, this.hoverDelay);\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }, this.hoverDelay);\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keydown\", event => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", event => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n          this.elements.controller.open();\n          this.focusFirstChild();\n        }\n      });\n    }\n  }\n\n  /**\n   * Focus the menu.\n   */\n  focus() {\n    this.focusState = \"self\";\n\n    if (\n      this.currentEvent === \"keyboard\" ||\n      (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\")\n    ) {\n      this.dom.menu.focus();\n    }\n  }\n\n  /**\n   * Unfocus the menu.\n   */\n  blur() {\n    this.focusState = \"none\";\n\n    if (\n      this.currentEvent === \"keyboard\" ||\n      (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\")\n    ) {\n      this.dom.menu.blur();\n    }\n\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.close();\n    }\n  }\n\n  /**\n   * Focues the menu's first child.\n   */\n  focusFirstChild() {\n    this.blurCurrentChild();\n    this.currentChild = 0;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusLastChild() {\n    this.blurCurrentChild();\n    this.currentChild = this.elements.menuItems.length - 1;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    if (this.currentChild < this.elements.menuItems.length - 1) {\n      this.blurCurrentChild();\n      this.currentChild = this.currentChild + 1;\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    if (this.currentChild > 0) {\n      this.blurCurrentChild();\n      this.currentChild = this.currentChild - 1;\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's current child.\n   */\n  focusCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu's current child.\n   */\n  blurCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's controller.\n   */\n  focusController() {\n    if (this.dom.controller) {\n      if (this.currentEvent !== \"mouse\") {\n        this.dom.controller.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Focus the menu's container.\n   */\n  focusContainer() {\n    if (this.dom.container) {\n      if (this.currentEvent !== \"mouse\") {\n        this.dom.container.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Close all submenu children.\n   */\n  closeChildren() {\n    this.elements.submenuToggles.forEach(toggle => toggle.close());\n  }\n\n  get [baseMenuType]() {\n    return true;\n  }\n}\n\nexport default BaseMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a DisclosureMenu.\n */\nclass DisclosureMenuItem extends BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                    param0                         - The menu item object.\n   * @param {HTMLElement}               param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}               param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {DisclosureMenu}            param0.parentMenu              - The parent menu.\n   * @param {boolean}                   [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {DisclosureMenu|null}       [param0.childMenu = null]      - The child menu.\n   * @param {DisclosureMenuToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    this.initialize();\n  }\n}\n\nexport default DisclosureMenuItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/*\n * A link or button that controls the visibility of a DisclosureMenu.\n */\nclass DisclosureMenuToggle extends BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}               param0                       - The menu toggle object.\n   * @param {HTMLElement}          param0.menuToggleElement     - The toggle element in the DOM.\n   * @param {HTMLElement}          param0.parentElement         - The element containing the controlled menu.\n   * @param {DisclosureMenu}       param0.controlledMenu        - The menu controlled by this toggle.\n   * @param {string|string[]|null} [param0.openClass = \"show\"]  - The class to apply when the controlled menu is \"open\".\n   * @param {string|string[]|null} [param0.closeClass = \"hide\"] - The class to apply when the controlled menu is \"closed\".\n   * @param {DisclosureMenu|null}  [param0.parentMenu = null]   - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    parentMenu = null,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      openClass,\n      closeClass,\n      parentMenu,\n    });\n\n    this.initialize();\n  }\n}\n\nexport default DisclosureMenuToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport DisclosureMenuItem from \"./disclosureMenuItem.js\";\nimport DisclosureMenuToggle from \"./disclosureMenuToggle.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible disclosure menu in the DOM.\n *\n * See https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html\n */\nclass DisclosureMenu extends BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}              param0                               - The menu object.\n   * @param {HTMLElement}         param0.menuElement                   - The menu element in the DOM.\n   * @param {string}              [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}              [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}              [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}              [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}              [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null}    [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null}    [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string}              [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string}              [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}             [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {DisclosureMenu|null} [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}              [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}              [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    // Set default class types.\n    this.MenuType = DisclosureMenu;\n    this.MenuItemType = DisclosureMenuItem;\n    this.MenuToggleType = DisclosureMenuToggle;\n\n    this.currentChild = -1;\n\n    this.initialize();\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    super.initialize();\n\n    this.handleFocus();\n    this.handleClick();\n    this.handleHover();\n    this.handleKeydown();\n    this.handleKeyup();\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    super.handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", event => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (this.focusState === \"self\") {\n        const keys = [\n          \"ArrowUp\",\n          \"ArrowRight\",\n          \"ArrowDown\",\n          \"ArrowLeft\",\n          \"Home\",\n          \"End\",\n        ];\n        const submenuKeys = [\"Space\", \"Enter\"];\n        const controllerKeys = [\"Escape\"];\n        const parentKeys = [\"Escape\"];\n\n        if (keys.includes(key)) {\n          preventEvent(event);\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        } else if (this.elements.parentMenu && parentKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    super.handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", event => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (this.focusState === \"self\") {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.\n          // - Click handling of other links in the menu is handled by the browser.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.toggle.preview();\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape\n          // - If a dropdown is open, closes it.\n          // - If was within the closed dropdown, sets focus on the button that controls that dropdown.\n          const hasOpenChild = this.elements.submenuToggles.some(\n            toggle => toggle.isOpen\n          );\n\n          if (hasOpenChild) {\n            preventEvent(event);\n            this.closeChildren();\n          } else if (this.elements.parentMenu) {\n            preventEvent(event);\n            this.elements.parentMenu.closeChildren();\n            this.elements.parentMenu.focusCurrentChild();\n          } else if (\n            this.isTopLevel &&\n            this.elements.controller &&\n            this.elements.controller.isOpen\n          ) {\n            this.elements.controller.close();\n            this.focusController();\n          }\n        } else if (key === \"ArrowDown\" || key === \"ArrowRight\") {\n          // Hitting the Down or Right Arrow:\n          // - If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.\n          // - If focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.\n          // - If focus is on a link, and it is not the last link, moves focus to the next link.\n          preventEvent(event);\n\n          if (\n            this.currentMenuItem.isSubmenuItem &&\n            this.currentMenuItem.elements.toggle.isOpen\n          ) {\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n            this.currentMenuItem.elements.childMenu.focusFirstChild();\n          } else {\n            this.focusNextChild();\n          }\n        } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\n          // Hitting the Up or Left Arrow:\n          // - If focus is on a button, and it is not the first button, moves focus to the previous button.\n          // - If focus is on a link, and it is not the first link, moves focus to the previous link.\n          preventEvent(event);\n          this.focusPreviousChild();\n        } else if (key === \"Home\") {\n          // Hitting Home:\n          // - If focus is on a button, and it is not the first button, moves focus to the first button.\n          // - If focus is on a link, and it is not the first link, moves focus to the first link.\n          preventEvent(event);\n          this.focusFirstChild();\n        } else if (key === \"End\") {\n          // Hitting End:\n          // - If focus is on a button, and it is not the last button, moves focus to the last button.\n          // - If focus is on a link, and it is not the last link, moves focus to the last link.\n          preventEvent(event);\n          this.focusLastChild();\n        }\n      }\n    });\n  }\n}\n\nexport default DisclosureMenu;\n"],"names":["baseMenuType","Symbol","baseMenuToggleType","isHTMLElement","elements","type","TypeError","key","HTMLElement","error","console","isCSSSelector","values","document","querySelector","isBoolean","isNumber","isString","isMenu","isTag","tagName","tag","toLowerCase","check","isMenuToggle","isValidState","validStates","includes","join","isValidEvent","validEvents","isEventSupported","event","element","eventProp","isValidClassList","Array","isArray","forEach","value","classValue","isValidHoverType","BaseMenuToggle","menuToggleElement","parentElement","controlledMenu","parentMenu","domElements","toggle","parent","menuElements","isOpen","expandEvent","CustomEvent","bubbles","detail","collapseEvent","initialize","closeClass","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","classList","add","show","openClass","remove","dispatchEvent","expand","closeSiblings","focusState","collapse","closeChildren","currentChild","blur","close","open","submenuToggles","BaseMenuItem","menuItemElement","menuLinkElement","isSubmenuItem","childMenu","item","link","isController","currentEvent","hoverType","focus","keyPress","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","match","Tab","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverDelay","menuItems","submenuItems","submenus","controller","container","domSelectors","menuLinks","rootMenu","root","MenuType","MenuItemType","MenuToggleType","findRootMenu","setDOMElements","createChildElements","submenuOpenClass","submenuCloseClass","focussedChild","state","hover","delay","elementType","base","filter","selectors","baseElement","baseFilter","selector","from","querySelectorAll","Error","setDOMElementType","clearDOMElementType","addDOMElementType","menuItem","toggler","submenu","push","index","addEventListener","toggleToggle","contains","target","ontouchend","onmouseup","preview","some","focusCurrentChild","setTimeout","focusFirstChild","blurCurrentChild","currentMenuItem","DisclosureMenuItem","DisclosureMenuToggle","DisclosureMenu","handleFocus","handleClick","handleHover","handleKeydown","handleKeyup","submenuKeys","controllerKeys","parentKeys","hasOpenChild","focusController","focusNextChild","focusPreviousChild","focusLastChild"],"mappings":"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"}